---
# Common to all services
x-common: &common
    restart: unless-stopped
    tty: true # Required for non-root users with selinux enabled.
    secrets:
        - source: CERT_PUBLIC_KEY
        - source: CERT_PRIVATE_KEY
        - source: CERT_AUTHORITY
        - source: UID
    security_opt:
        - label=type:container_runtime_t # Required for selinux to access the docker socket and bind mount files.

networks:
    default:

volumes:
    activemq-data: {}
    blazegraph-data: {}
    cantaloupe-data: {}
    drupal-private-files: {}
    drupal-public-files: {}
    drupal-solr-config: {}
    fcrepo-data: {}
    mariadb-data: {}
    solr-data: {}

secrets:
    # Certificates are only used for development environments.
    # In production the expectation is to use lets encrypt, etc.
    # See README.md for how to generate them.
    CERT_PUBLIC_KEY:
        file: ./certs/cert.pem
    CERT_PRIVATE_KEY:
        file: ./certs/privkey.pem
    CERT_AUTHORITY:
        file: ./certs/rootCA.pem
    # UID is used to map the nginx user id number to that of the host to prevent
    # problems when bind mounting files from this repository into the container
    # for development purposes.
    UID:
        file: ./certs/UID
    # Production secrets:
    #
    # Unless otherwise specified the following command can be used to generate
    # passwords, wherein:
    # The range passed to grep is the valid characters
    #   - '[!-~]' to include special characters or
    # . - [A-Za-z0-9]'
    # The number passed to head is the length of the password.
    #
    # grep -ao '[A-Za-z0-9]' </dev/urandom | head -32 | tr -d '\n' > ./secrets/PASSWORD
    ACTIVEMQ_PASSWORD:
        file: "./secrets/ACTIVEMQ_PASSWORD"
    ACTIVEMQ_WEB_ADMIN_PASSWORD:
        file: "./secrets/ACTIVEMQ_WEB_ADMIN_PASSWORD"
    ALPACA_JMS_PASSWORD:
        file: "./secrets/ACTIVEMQ_PASSWORD"
    DB_ROOT_PASSWORD:
        file: "./secrets/DB_ROOT_PASSWORD"
    DRUPAL_DEFAULT_ACCOUNT_PASSWORD:
        file: "./secrets/DRUPAL_DEFAULT_ACCOUNT_PASSWORD"
    DRUPAL_DEFAULT_DB_PASSWORD:
        file: "./secrets/DRUPAL_DEFAULT_DB_PASSWORD"
    # The salt should use the following character range: 'A-Za-z0-9-_'.
    # And be 74 characters long.
    DRUPAL_DEFAULT_SALT:
        file: "./secrets/DRUPAL_DEFAULT_SALT"
    FCREPO_DB_PASSWORD:
        file: "./secrets/FCREPO_DB_PASSWORD"
    JWT_ADMIN_TOKEN:
        file: "./secrets/JWT_ADMIN_TOKEN"
    # First generate the private key below.
    # Then generate with openssl
    # openssl rsa -pubout -in ./secrets/JWT_PRIVATE_KEY -out ./secrets/JWT_PUBLIC_KEY &>/dev/null
    JWT_PUBLIC_KEY:
        file: "./secrets/JWT_PUBLIC_KEY"
    # Generate with openssl:
    # openssl genrsa -out ./secrets/JWT_PRIVATE_KEY 2048 &>/dev/null
    JWT_PRIVATE_KEY:
        file: "./secrets/JWT_PRIVATE_KEY"

services:
    alpaca:
        <<: [*common]
        image: islandora/alpaca:4.1.6
        secrets:
            - source: ALPACA_JMS_PASSWORD
        depends_on:
            activemq:
                condition: service_healthy
    crayfits:
        <<: [*common]
        image: islandora/crayfits:4.1.6
        secrets:
            - source: JWT_ADMIN_TOKEN
            - source: JWT_PUBLIC_KEY
    fits:
        <<: [*common]
        image: islandora/fits:4.1.6
    homarus:
        <<: [*common]
        image: islandora/homarus:4.1.6
        secrets:
            - source: JWT_ADMIN_TOKEN
            - source: JWT_PUBLIC_KEY
    houdini:
        <<: [*common]
        image: islandora/houdini:4.1.6
        secrets:
            - source: JWT_ADMIN_TOKEN
            - source: JWT_PUBLIC_KEY
    hypercube:
        <<: [*common]
        image: islandora/hypercube:4.1.6
        secrets:
            - source: JWT_ADMIN_TOKEN
            - source: JWT_PUBLIC_KEY
    mariadb:
        <<: [*common]
        image: islandora/mariadb:4.1.6
        secrets:
            - source: DB_ROOT_PASSWORD
        volumes:
            - mariadb-data:/var/lib/mysql:rw
    milliner:
        <<: [*common]
        image: islandora/milliner:4.1.6
        environment:
            MILLINER_FEDORA6: ${FEDORA_6}
        secrets:
            - source: JWT_ADMIN_TOKEN
            - source: JWT_PUBLIC_KEY
    activemq:
        <<: [*common]
        image: islandora/activemq:4.1.6
        labels:
            traefik.enable: ${DEVELOPMENT_ENVIRONMENT}
            traefik.http.middlewares.https-redirect.redirectscheme.permanent: true
            traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
            traefik.http.routers.activemq_http.entrypoints: http
            traefik.http.routers.activemq_http.middlewares: https-redirect
            traefik.http.routers.activemq_http.rule: &traefik-host-activemq-dev Host(`activemq.${DOMAIN}`)
            traefik.http.routers.activemq_http.service: activemq
            traefik.http.routers.activemq_https.entrypoints: https
            traefik.http.routers.activemq_https.rule: *traefik-host-activemq-dev
            traefik.http.routers.activemq_https.tls: true
            traefik.http.services.activemq.loadbalancer.server.port: 8161
            traefik.subdomain: activemq
        secrets:
            - source: ACTIVEMQ_PASSWORD
            - source: ACTIVEMQ_WEB_ADMIN_PASSWORD
        volumes:
            - activemq-data:/opt/activemq/data:rw
    blazegraph:
        <<: [*common]
        image: islandora/blazegraph:4.1.6
        labels:
            traefik.enable: ${DEVELOPMENT_ENVIRONMENT}
            traefik.http.middlewares.https-redirect.redirectscheme.permanent: true
            traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
            traefik.http.routers.blazegraph_http.entrypoints: http
            traefik.http.routers.blazegraph_http.middlewares: https-redirect
            traefik.http.routers.blazegraph_http.rule: &traefik-host-blazegraph-dev Host(`blazegraph.${DOMAIN}`)
            traefik.http.routers.blazegraph_http.service: blazegraph
            traefik.http.routers.blazegraph_https.entrypoints: https
            traefik.http.routers.blazegraph_https.rule: *traefik-host-blazegraph-dev
            traefik.http.routers.blazegraph_https.tls: true
            traefik.http.services.blazegraph.loadbalancer.server.port: 8080
        volumes:
            - blazegraph-data:/data:rw
    cantaloupe:
        <<: [*common]
        image: islandora/cantaloupe:4.1.6
        labels:
            traefik.enable: ${DEVELOPMENT_ENVIRONMENT}
            traefik.http.middlewares.https-redirect.redirectscheme.permanent: true
            traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
            traefik.http.middlewares.cantaloupe-custom-request-headers.headers.customrequestheaders.X-Forwarded-Path: /cantaloupe
            traefik.http.middlewares.cantaloupe-strip-prefix.stripprefix.prefixes: /cantaloupe
            traefik.http.middlewares.cantaloupe.chain.middlewares: cantaloupe-strip-prefix,cantaloupe-custom-request-headers
            traefik.http.routers.cantaloupe_http.entrypoints: http
            traefik.http.routers.cantaloupe_http.middlewares: https-redirect
            traefik.http.routers.cantaloupe_http.rule: &traefik-host-cantaloupe-dev Host(`${DOMAIN}`) && PathPrefix(`/cantaloupe`)
            traefik.http.routers.cantaloupe_http.service: cantaloupe
            traefik.http.routers.cantaloupe_https.middlewares: cantaloupe
            traefik.http.routers.cantaloupe_https.entrypoints: https
            traefik.http.routers.cantaloupe_https.rule: *traefik-host-cantaloupe-dev
            traefik.http.routers.cantaloupe_https.tls: true
            traefik.http.services.cantaloupe.loadbalancer.server.port: 8182
        volumes:
            - cantaloupe-data:/data:rw
    drupal:
        <<: [*common]
        image: ${REPOSITORY}/${COMPOSE_PROJECT_NAME}:${TAG}
        build:
            context: ./drupal
            args:
                REPOSITORY: islandora
                TAG: 4.1.6
            x-bake:
                platforms: [linux/amd64, linux/arm64]
                cache-from:
                    - type=registry,ref=${REPOSITORY}/${COMPOSE_PROJECT_NAME}:${TAG}
                    - type=registry,ref=${REPOSITORY}/${COMPOSE_PROJECT_NAME}:latest
                cache-to:
                    - type=inline
        environment:
            DEVELOPMENT_ENVIRONMENT: ${DEVELOPMENT_ENVIRONMENT}
            DRUPAL_DEFAULT_BROKER_URL: "tcp://activemq:61613"
            DRUPAL_DEFAULT_CANTALOUPE_URL: "https://${DOMAIN}/cantaloupe/iiif/2"
            DRUPAL_DEFAULT_CONFIGDIR: "/var/www/drupal/config/sync"
            DRUPAL_DEFAULT_FCREPO_HOST: "fcrepo"
            DRUPAL_DEFAULT_FCREPO_PORT: 8080
            DRUPAL_DEFAULT_FCREPO_URL: "https://fcrepo.${DOMAIN}/fcrepo/rest/"
            DRUPAL_DEFAULT_INSTALL_EXISTING_CONFIG: "true"
            DRUPAL_DEFAULT_NAME: "Islandora Digital Collections"
            DRUPAL_DEFAULT_PROFILE: "minimal"
            DRUPAL_DEFAULT_SITE_URL: "${DOMAIN}"
            DRUPAL_DEFAULT_SOLR_CORE: "default"
            DRUPAL_DRUSH_URI: "https://${DOMAIN}" # Used by docker/drupal/rootfs/usr/local/share/custom/install.sh
            NGINX_REAL_IP_RECURSIVE: ${REVERSE_PROXY}
            NGINX_SET_REAL_IP_FROM: ${FRONTEND_IP_1}
            NGINX_SET_REAL_IP_FROM2: ${FRONTEND_IP_2}
            NGINX_SET_REAL_IP_FROM3: ${FRONTEND_IP_3}
        labels:
            traefik.enable: true
            traefik.http.middlewares.https-redirect.redirectscheme.permanent: true
            traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
            traefik.http.routers.drupal_http.entrypoints: http
            traefik.http.routers.drupal_http.middlewares: https-redirect
            traefik.http.routers.drupal_http.service: drupal
            traefik.http.routers.drupal_https.entrypoints: https
            traefik.http.routers.drupal_https.service: drupal
            traefik.http.routers.drupal_https.tls: true
            traefik.http.services.drupal.loadbalancer.server.port: 80
            traefik.http.routers.drupal_http.rule: &traefik-host-drupal-prod Host(`${DOMAIN}`)
            traefik.http.routers.drupal_https.rule: *traefik-host-drupal-prod
            traefik.http.routers.drupal_https.tls.certresolver: resolver
        secrets:
            - source: DB_ROOT_PASSWORD
            - source: DRUPAL_DEFAULT_ACCOUNT_PASSWORD
            - source: DRUPAL_DEFAULT_DB_PASSWORD
            - source: DRUPAL_DEFAULT_SALT
            - source: JWT_PRIVATE_KEY
            - source: JWT_PUBLIC_KEY
        volumes:
            - type: volume
              source: drupal-public-files
              target: /var/www/drupal/web/sites/default/files
              read_only: false
            - type: volume
              source: drupal-private-files
              target: /var/www/drupal/private
              read_only: false
            - drupal-solr-config:/opt/solr/server/solr/default:z,rw
    fcrepo:
        <<: [*common]
        image: islandora/fcrepo6:4.1.6
        environment:
            FCREPO_ALLOW_EXTERNAL_DEFAULT: "http://default/"
            FCREPO_ALLOW_EXTERNAL_DRUPAL: "https://${DOMAIN}/"
            FCREPO_PERSISTENCE_TYPE: "mysql"
            DB_HOST: mariadb
            DB_PORT: 3306
        labels:
            traefik.enable: ${DEVELOPMENT_ENVIRONMENT}
            traefik.http.middlewares.https-redirect.redirectscheme.permanent: true
            traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
            # Due to weird logic in `fcrepo/static/js/common.js`, do not use https
            # as it assumes it always needs to append /fcr:metadata to every request
            # breaking the links. Though for files we do want that page to be accessed
            # so check for a file extension.
            traefik.http.middlewares.fcrepo-strip-suffix.replacepathregex.regex: "^(.*/fcrepo/rest/[^.]*)/fcr:metadata$$"
            traefik.http.middlewares.fcrepo-strip-suffix.replacepathregex.replacement: "$$1"
            traefik.http.routers.fcrepo_http.entrypoints: http
            traefik.http.routers.fcrepo_http.middlewares: https-redirect
            traefik.http.routers.fcrepo_http.rule: &traefik-host-fcrepo-dev Host(`fcrepo.${DOMAIN}`)
            traefik.http.routers.fcrepo_http.service: fcrepo
            traefik.http.routers.fcrepo_https.entrypoints: https
            traefik.http.routers.fcrepo_https.middlewares: fcrepo-strip-suffix
            traefik.http.routers.fcrepo_https.rule: *traefik-host-fcrepo-dev
            traefik.http.routers.fcrepo_https.tls: true
            traefik.http.services.fcrepo.loadbalancer.server.port: 8080
        secrets:
            - source: DB_ROOT_PASSWORD
            - source: FCREPO_DB_PASSWORD
            - source: JWT_ADMIN_TOKEN
            - source: JWT_PUBLIC_KEY
        volumes:
            - fcrepo-data:/data:rw
        depends_on:
            activemq:
                condition: service_healthy
    solr:
        <<: [*common]
        image: islandora/solr:4.1.6
        labels:
            traefik.enable: ${DEVELOPMENT_ENVIRONMENT}
            traefik.http.middlewares.https-redirect.redirectscheme.permanent: true
            traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
            traefik.http.routers.solr_http.entrypoints: http
            traefik.http.routers.solr_http.middlewares: https-redirect
            traefik.http.routers.solr_http.rule: &traefik-host-solr Host(`solr.${DOMAIN}`)
            traefik.http.routers.solr_http.service: solr
            traefik.http.routers.solr_https.entrypoints: https
            traefik.http.routers.solr_https.rule: *traefik-host-solr
            traefik.http.routers.solr_https.tls: true
            traefik.http.services.solr.loadbalancer.server.port: 8983
        volumes:
            - solr-data:/data:rw
            - type: volume
              source: drupal-solr-config
              target: /opt/solr/server/solr/default
              read_only: false
              volume:
                  nocopy: true
        depends_on:
            drupal:
                condition: service_healthy
    traefik:
        <<: [*common]
        image: traefik:v3.4.1@sha256:cd40ab7bc1f047731d5b22595203812343efcb6538014c4e93221cfc3a77217a
        # Change caServer to use the staging server when testing changes to the Traefik.
        #
        # Staging: https://acme-staging-v02.api.letsencrypt.org/directory
        # Production: https://acme-v02.api.letsencrypt.org/directory
        #
        # @See https://letsencrypt.org/docs/staging-environment/
        # @See https://doc.traefik.io/traefik/https/acme/
        command: >-
            --api.insecure=true
            --api.dashboard=true
            --api.debug=true
            --ping=true
            --entryPoints.http.address=:80
            --entryPoints.https.address=:443
            --entryPoints.https.transport.respondingTimeouts.readTimeout=60
            --providers.file.filename=/etc/traefik/tls.yml
            --providers.docker=true
            --providers.docker.network=default
            --providers.docker.exposedByDefault=false
            --certificatesresolvers.resolver.acme.httpchallenge=true
            --certificatesresolvers.resolver.acme.httpchallenge.entrypoint=http
            --certificatesresolvers.resolver.acme.email=${EMAIL}
            --certificatesresolvers.resolver.acme.storage=/acme/acme.json
            --certificatesResolvers.resolver.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
        labels:
            traefik.enable: ${DEVELOPMENT_ENVIRONMENT}
            traefik.http.middlewares.https-redirect.redirectscheme.permanent: true
            traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
            traefik.http.routers.traefik_http.entrypoints: http
            traefik.http.routers.traefik_http.middlewares: https-redirect
            traefik.http.routers.traefik_http.rule: &traefik-host-traefik Host(`traefik.${DOMAIN}`)
            traefik.http.routers.traefik_http.service: traefik
            traefik.http.routers.traefik_https.entrypoints: https
            traefik.http.routers.traefik_https.rule: *traefik-host-traefik
            traefik.http.routers.traefik_https.tls: true
            traefik.http.services.traefik.loadbalancer.server.port: 8080
        ports:
            - "80:80"
            - "443:443"
        security_opt:
            - label=type:container_runtime_t # Required for selinux to access the docker socket.
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:z
            - ./certs:/acme:Z
            - ./prod-tls.yml:/etc/traefik/tls.yml:Z,ro
        healthcheck:
            test: traefik healthcheck --ping
        networks:
            default:
                aliases:
                    # Allow services to connect on the same name/port as the outside.
                    - activemq.${DOMAIN}
                    - blazegraph.${DOMAIN}
                    - fcrepo.${DOMAIN}
                    - ${DOMAIN} # Drupal is at the root domain.
                    - solr.${DOMAIN}
        depends_on:
            # Sometimes traefik doesn't pick up on new containers so make sure
            # they are started before traefik.
            activemq:
                condition: service_healthy
            blazegraph:
                condition: service_started
            drupal:
                condition: service_healthy
            fcrepo:
                condition: service_healthy
            solr:
                condition: service_healthy
